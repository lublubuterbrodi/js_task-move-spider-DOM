{"mappings":"ACEA,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EAEE,IAAM,EAAS,SAAS,aAAa,CAAC,WAChC,EAAO,EAAE,MAAM,CAAC,OAAO,CAAC,SAE9B,GAAK,GAIL,IAAM,EAAW,EAAK,qBAAqB,GACrC,EAAa,SAAS,iBAAiB,GAAM,WAAW,EACxD,EAAa,EAAO,qBAAqB,GAE3C,EAAU,EAAE,OAAO,CAAG,EAAS,IAAI,CAAG,EAAW,KAAK,CAAG,EAAI,EAC7D,EAAU,EAAE,OAAO,CAAG,EAAS,GAAG,CAAG,EAAW,MAAM,CAAG,EAAI,EAEjE,EAAU,KAAK,GAAG,CAAC,EAAG,KAAK,GAAG,CAAC,EAAS,EAAK,WAAW,CAAG,EAAW,KAAK,GAE3E,EAAU,KAAK,GAAG,CAChB,EACA,KAAK,GAAG,CAAC,EAAS,EAAK,YAAY,CAAG,EAAW,MAAM,GAGzD,EAAO,KAAK,CAAC,IAAI,CAAG,GAAW,MAAA,CAAR,EAAQ,MAC/B,EAAO,KAAK,CAAC,GAAG,CAAG,GAAW,MAAA,CAAR,EAAQ,MAChC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"click\", function(e) {\n    // write code here\n    var spider = document.querySelector(\".spider\");\n    var wall = e.target.closest(\".wall\");\n    if (!wall) return;\n    var wallRect = wall.getBoundingClientRect();\n    var borderSize = parseInt(getComputedStyle(wall).borderWidth);\n    var spiderRect = spider.getBoundingClientRect();\n    var targetX = e.clientX - wallRect.left - spiderRect.width / 2 - borderSize;\n    var targetY = e.clientY - wallRect.top - spiderRect.height / 2 - borderSize;\n    targetX = Math.max(0, Math.min(targetX, wall.clientWidth - spiderRect.width));\n    targetY = Math.max(0, Math.min(targetY, wall.clientHeight - spiderRect.height));\n    spider.style.left = \"\".concat(targetX, \"px\");\n    spider.style.top = \"\".concat(targetY, \"px\");\n});\n\n//# sourceMappingURL=index.426f4c77.js.map\n","'use strict';\n\ndocument.addEventListener('click', (e) => {\n  // write code here\n  const spider = document.querySelector('.spider');\n  const wall = e.target.closest('.wall');\n\n  if (!wall) {\n    return;\n  }\n\n  const wallRect = wall.getBoundingClientRect();\n  const borderSize = parseInt(getComputedStyle(wall).borderWidth);\n  const spiderRect = spider.getBoundingClientRect();\n\n  let targetX = e.clientX - wallRect.left - spiderRect.width / 2 - borderSize;\n  let targetY = e.clientY - wallRect.top - spiderRect.height / 2 - borderSize;\n\n  targetX = Math.max(0, Math.min(targetX, wall.clientWidth - spiderRect.width));\n\n  targetY = Math.max(\n    0,\n    Math.min(targetY, wall.clientHeight - spiderRect.height),\n  );\n\n  spider.style.left = `${targetX}px`;\n  spider.style.top = `${targetY}px`;\n});\n"],"names":["document","addEventListener","e","spider","querySelector","wall","target","closest","wallRect","getBoundingClientRect","borderSize","parseInt","getComputedStyle","borderWidth","spiderRect","targetX","clientX","left","width","targetY","clientY","top","height","Math","max","min","clientWidth","clientHeight","style","concat"],"version":3,"file":"index.426f4c77.js.map"}